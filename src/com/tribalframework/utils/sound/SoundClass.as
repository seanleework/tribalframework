/*** ** Sound Manager / Player** com.tribalframework.utils.sound.SoundClass** @ver 1.0** @date 23-06-2010***************************************/package com.tribalframework.utils.sound{	import flash.events.Event;	import flash.media.*;	import flash.net.URLRequest;	import com.greensock.*;		public class SoundClass	{		static private var sc:SoundChannel;		static private var st:SoundTransform;		static private var snd:Sound;		static private var pausePoint:Number;				static private var loadedCount:Number;		static private var playingCount:Number;				static private var _autoplay:Boolean;				public function SoundClass(){					}		 		/*		** req:String = location of sound file		** autoplay:Boolean = if true, call playSound() after sound has loaded		** example: SoundClass.initSound("sound.mp3"); 		**			SoundClass.playSound();		**			SoundClass.pauseSound();		**			SoundClass.stopSound();		** 			SoundClass.volDown();		** 			SoundClass.volUp();		**********************************************************/		static public function initSound(req:String, autoplay:Boolean=true){			loadedCount = 0;			playingCount = 0;			pausePoint = 0;			_autoplay = autoplay;						sc = new SoundChannel();	// SoundTransform MUST DIE DIE			st = new SoundTransform();	// be declared after SoundChannel						snd = new Sound();			snd.load(new URLRequest(req));						snd.addEventListener(Event.COMPLETE, soundLoaded);		}				static private function soundLoaded(e:Event){			snd.removeEventListener(Event.COMPLETE, soundLoaded);			loadedCount = 1;			trace('loaded '+loadedCount);						if(_autoplay == true){				playSound();			}		}				/*		** play  		*******************/		static public function playSound(begin:Number=0, repeat:Number=99){						begin = pausePoint;						if(loadedCount == 1 && playingCount != 1){				playingCount = 1;				sc = snd.play(begin, repeat, st);	// 0, 99				sc.soundTransform = st;						trace('begin position '+begin);			}			else if(loadedCount == 0){				trace("sound source not loaded");			}					}				/*		** Stop  		*******************/		static public function stopSound(){			if(playingCount > 0){				playingCount = 0;				pausePoint = 0;				sc.stop();			}		}				/*		** Pause  		*******************/		static public function pauseSound(){			if(playingCount > 0){				playingCount = 0;				pausePoint = sc.position;				trace('ppt '+pausePoint);				sc.stop();			}		}				/*		** fade volume to 0  		***********************/		static public function volDown(vol:Number=0, duration:Number=1){			TweenMax.to(sc, duration, {volume:vol});		}				/*		** fade volume to 1  		***********************/		static public function volUp(vol:Number=1, duration:Number=1){			TweenMax.to(sc, duration, {volume:vol});		}				static public function seekTo(){			playingCount = 0;			pausePoint = sc.position + 5;			sc.stop();						playSound(pausePoint);		}	}}