/*** ** YouTube Manager / Player** com.tribalframework.utils.youtube.YoutubeClass** @ver 1.0** @date 01-07-2010***************************************/package com.tribalframework.utils.youtube{	import flash.events.*;	import flash.media.*;	import flash.net.URLRequest;	import flash.display.*;	import flash.system.Security;		public class YoutubeClass	{		static private var loader:Loader;		static private var player:Object;				static private var _vid:Object;		static private var _playerW:Number;		static private var _playerH:Number;				public function YoutubeClass(){					}				/*		** initYoutube		** video_mc:Object = FLVPlayback component,		** id:String = youtube video 11-letter/digit ID string,		** w:Number = youtube player width		** h:Number = youtube player height		** example: YoutubeClass.initYoutube( mcName, "gjfkldjlgv", 320, 200);		**			YoutubeClass.playYoutube();		**			YoutubeClass.stopYoutube();		***********************************************************/		static public function initYoutube(video_mc:Object, id:String, w:Number, h:Number){			Security.allowDomain("www.youtube.com");						_vid = video_mc;			_playerW = w;			_playerH = h;						loader = new Loader();			loader.contentLoaderInfo.addEventListener(Event.INIT, onLoaderInit);			loader.load(new URLRequest("http://www.youtube.com/v/"+id+"?version=3"));		}					// ***** youtube api initializers		static private function onLoaderInit(event:Event):void {			_vid.addChild(loader);			loader.content.addEventListener("onReady", onPlayerReady);		}		static private function onPlayerReady(event:Event):void {			loader.content.removeEventListener("onReady", onPlayerReady);			// Event.data contains the event parameter, which is the Player API ID 			trace("player ready:", Object(event).data);					// Once this event has been dispatched by the player, we can use			// cueVideoById, loadVideoById, cueVideoByUrl and loadVideoByUrl			// to load a particular YouTube video.			player = loader.content;						// Set appropriate player dimensions for your application			player.setSize(_playerW, _playerH);						/*if(player.getVideoBytesLoaded() == player.getVideoBytesTotal()){				addEventListener(Event.ENTER_FRAME, traceVid);			}*/						playYoutube();		}						static public function playYoutube(){			if(player){				player.playVideo();			}		//	player.loadVideoById("S3djtxYRjr0&hl=en_US&fs=1&");			trace('STATE '+player.getPlayerState());		}				static public function stopYoutube(){			if(player){				player.stopVideo();			}		}				static public function killYoutube(){			if(player){				player.stopVideo();				_vid.removeChild(loader);			}		}			}}