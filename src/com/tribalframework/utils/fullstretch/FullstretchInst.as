/*** ** Full browser stretch for overlays and objects** com.tribalframework.utils.fullstretch.FullstretchInst** @ver 1.0** @date 26-07-2010**************************************************************/package com.tribalframework.utils.fullstretch{	import flash.display.*;	import flash.events.*;	import flash.display.StageAlign;	import flash.display.StageScaleMode;		public class FullstretchInst	{		private var _stg:Object;		private var _obj:DisplayObject;				private var _obj2:DisplayObject;		private var _obj3:DisplayObject;		private var _obj4:DisplayObject;				private var ra:Boolean;		private var ta:Boolean;		private var ca:Boolean;		private var ba:Boolean;		private var mca:Boolean;		private var sca:Boolean;		private var w;		private var h;				private var scaXFactor:Number;		private var scaYFactor:Number;		private var HWFactor:Number;		private var percStage:Number;				private var _buffer:Number;		private var _topbuffer:Number;		private var _btmbuffer:Number;				private var objArray:Array;				private var _direction:String;				public function FullstretchInst(){					}				/* obj = affected display object, usually overlay mc.		** stg = stage.		** example: Fullstretch.initStretch(overlay, stage);	// overlay is name of mc		*****************************************************************************************/		public function initStretchX(obj:DisplayObject, stg:Object){			_obj = obj;			_stg = stg;						_stg.scaleMode = StageScaleMode.NO_SCALE;			_stg.align = StageAlign.LEFT;						_obj.x = 0;		//	_obj.y = 0;			_obj.width = _stg.stageWidth;		//	_obj.height = _stg.stageHeight;			_direction = "x";		}		public function initStretchY(obj:DisplayObject, stg:Object){			_obj = obj;			_stg = stg;						_stg.scaleMode = StageScaleMode.NO_SCALE;			_stg.align = StageAlign.LEFT;					//	_obj.x = 0;			_obj.y = 0;		//	_obj.width = _stg.stageWidth;			_obj.height = _stg.stageHeight;						_direction = "y";		}								public function initObject(obj2:DisplayObject, stg:Object){			_stg = stg;			_stg.scaleMode = StageScaleMode.NO_SCALE;			_stg.align = StageAlign.TOP_LEFT;						objArray = new Array();			_obj2 = obj2;											//	objArray.push(_obj2);					}				// tot = number of total mc.		// put into a for loop but wat about name of the mc				public function activateResize(){			_stg.addEventListener(Event.RESIZE, resizeHandler);		}				public function deactivateResize(){			_stg.removeEventListener(Event.RESIZE, resizeHandler);	 		}				private function resizeHandler(e:Event){			if(_obj != null){				if(_direction == "x"){					_obj.width = e.target.stageWidth;				//	_obj.height = e.target.stageHeight;									_obj.x = (e.target.stageWidth/2) - (_obj.width/2);				//	_obj.y = (e.target.stageHeight/2) - (_obj.height/2);				}				if(_direction == "y"){				//	_obj.width = e.target.stageWidth;					_obj.height = e.target.stageHeight;								//	_obj.x = (e.target.stageWidth/2) - (_obj.width/2);					_obj.y = (e.target.stageHeight/2) - (_obj.height/2);				}			}						if(_obj2 != null){			   			   if(ra == true){					_obj2.x = e.target.stageWidth - (_obj2.width + _buffer);			   }			   			   if(ta == true){					_obj2.y = 0 + _topbuffer;   				}				if(ba == true){					_obj2.y = e.target.stageHeight - _btmbuffer;				//	_obj2.y = e.target.stageHeight + ;				}				if(ca == true){					_obj2.x = e.target.stageWidth/2 - _obj2.width/2;					_obj2.y = e.target.stageHeight/2 - _obj2.height/2;				}				if(mca == true){					_obj2.x = e.target.stageWidth/2 - w/2;					_obj2.y = e.target.stageHeight/2 - h/2;				}												if(sca == true){										_obj2.width = percStage * e.target.stageWidth;					_obj2.height = HWFactor * _obj2.width;									}			}					}						public function initRightAlign(buffer:Number=0){			_buffer = buffer;			_obj2.x = _stg.stageWidth - (_obj2.width + _buffer);			ra = true;		}		public function initTopAlign(buffer:Number=0){			_topbuffer = buffer;			_obj2.y = 0 + _topbuffer;   			ta = true;		}		public function initBtmAlign(buffer:Number=0){			_btmbuffer = buffer;			_obj2.y = _stg.stageHeight - _btmbuffer;   			ba = true;		}		public function initCenterAlign(){			_obj2.x = _stg.stageWidth/2 - _obj2.width/2;			_obj2.y = _stg.stageHeight/2 - _obj2.height/2;			ca = true;		}		public function initManualCenterAlign(objW, objH){			w = objW;			h = objH;			_obj2.x = _stg.stageWidth/2 - objW/2;			_obj2.y = _stg.stageHeight/2 - objH/2;			mca = true;		}				public function initScale(perc:Number=0.5){			sca = true;			HWFactor = _obj2.height / _obj2.width;			percStage = perc;						_obj2.width = percStage * _stg.stageWidth;			_obj2.height = HWFactor * _obj2.width;						scaXFactor = (_obj2.width/ _stg.width ) ;			scaYFactor = _obj2.height/ _stg.height;		}			}	}