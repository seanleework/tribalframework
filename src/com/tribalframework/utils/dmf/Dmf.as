/*** ** Displacement map filter** com.tribalframework.utils.dmf.Dmf;** @ver 1.0** @date 15-07-2010***************************************/package com.tribalframework.utils.dmf{	import flash.display.*;	import flash.geom.Point;	import flash.filters.DisplacementMapFilter;	import flash.events.*; 		public class Dmf extends MovieClip	{		private static var bm:Bitmap;		private static var bmd:BitmapData;		private static var pt:Point;		private static var dmf:DisplacementMapFilter;				private static var _map:MovieClip;		private static var _tgt:MovieClip;		private static var _mx:Number;		private static var _my:Number;		private static var _stg:Object;				public function Dmf(){				}				/* map = mc of 'magnifying glass' or the visual that will distort the target image		** tgt = target mc. displayobject that is to be affected/ distorted by the map		** stg = stage		** example: Dmf.initDmf(circle, mc, stage);		********************************************************************************************/		public static function initDmf(map:MovieClip, tgt:MovieClip, stg:Object){			_map = map;			_tgt = tgt;			_stg = stg;						// create bitmap data of the displacement map/ filter			bmd = new BitmapData(_map.width, _map.height, true, 0x808080);	// circle			bmd.draw(_map);			bm = new Bitmap(bmd);						_map.alpha = 0;			_map.cacheAsBitmap = true;			_map.smoothing = true;						_stg.addEventListener(Event.ENTER_FRAME, actionF);		}				private static function actionF(e:Event){						// ensures that the mouse is at the centre of the filter			_map.x = e.target.mouseX - _map.width/2;			_map.y = e.target.mouseY - _map.height/2; 						var offsetX = - _tgt.x + _map.x;			var offsetY = - _tgt.y + _map.y;						pt = new Point(offsetX, offsetY);			trace('pt '+pt);						// DisplacementMapFilter( bitmapdata, point, componentX, componentY, scaleX, scaleY);			// componentX and componentY alters 'magnifying' effect			dmf = new DisplacementMapFilter(bmd, pt, 1, 2, 80, 80);							_tgt.filters = new Array(dmf);					}					}	}