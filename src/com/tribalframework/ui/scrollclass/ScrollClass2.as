package com.tribalframework.ui.scrollclass{	import flash.display.*;	import flash.events.*;	import com.pixelbreaker.ui.osx.MacMouseWheel;//	import com.greensock.TweenMax;	public class ScrollClass2 extends Sprite 	{		private var offset:Number;		private var minY:Number = 0;		private var maxY:Number = 0;		private var perc:Number;				private var _thumb;		private var _track;		private var _content_mc;		private var _masker;		private var _stg;				public function ScrollClass2() {					}		public function create(track:MovieClip, thumb:MovieClip, content_mc:MovieClip, masker:MovieClip, stg:Object) {			_thumb = thumb;			_track = track;			_content_mc = content_mc;			_masker = masker;			_stg = stg;						MacMouseWheel.setup(_stg);			_stg.addEventListener(MouseEvent.MOUSE_WHEEL, mouseScrollHandler);						_content_mc.mask = _masker;			maxY = _track.height - _thumb.height;			_thumb.addEventListener(MouseEvent.MOUSE_DOWN, downF);			_stg.addEventListener(MouseEvent.MOUSE_UP, upF);			_track.addEventListener(MouseEvent.MOUSE_DOWN, trackDownF);		}		private function downF(e:MouseEvent) {			offset = this.mouseY - _thumb.y;			_stg.addEventListener(MouseEvent.MOUSE_MOVE, moveF);		}		private function upF(e:MouseEvent) {			_stg.removeEventListener(MouseEvent.MOUSE_MOVE, moveF);		}		private function moveF(e:Event=null) {			_thumb.y = mouseY - offset;			if (_thumb.y <= minY)				_thumb.y = minY;			if (_thumb.y >= maxY)				_thumb.y = maxY;				perc = _thumb.y / maxY;			//	TweenMax.to(_content_mc, 1, { y: -perc * (_content_mc.height - _masker.height) + _masker.y} );			_content_mc.y = -perc * (_content_mc.height - _masker.height) + _masker.y;		//	e.updateAfterEvent();		}				private function mouseScrollHandler(e:MouseEvent){			if(e.delta < 0){								_thumb.y += 8;							}		//	_thumb.y = mouseY - offset;			if (_thumb.y <= minY)				_thumb.y = minY;			if (_thumb.y >= maxY)				_thumb.y = maxY;				perc = _thumb.y / maxY;			//	TweenMax.to(_content_mc, 1, { y: -perc * (_content_mc.height - _masker.height) + _masker.y} );			_content_mc.y = -perc * (_content_mc.height - _masker.height) + _masker.y;		//	e.updateAfterEvent();					}		private function trackDownF(e:MouseEvent){			trace("fff"+ (this.mouseY - _thumb.y), _thumb.y, _thumb.height);			if((mouseY - _thumb.y) > (_thumb.y + _thumb.height)){				offset = this.mouseY - _thumb.y - 10;			}else if((mouseY - _thumb.y) < _thumb.y){				offset = this.mouseY - _thumb.y + 10;			}			trace(offset)			moveF();					}	}}